- name: Create httpd directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ httpd_docker_file_owner }}"
    group: "{{ httpd_docker_file_group }}"
    state: directory
    mode: 0755
  loop:
  - "{{ httpd_docker_path }}"
  - "{{ httpd_docker_path }}/certs"

- name: Create httpd certificate
  ansible.builtin.copy:
    content: "{{ httpd_docker_crt }}"
    dest: "{{ httpd_docker_path }}/certs/tls.crt"
    owner: "{{ httpd_docker_file_owner }}"
    group: "{{ httpd_docker_file_group }}"
    mode: 0644
  notify: restart httpd

- name: Create httpd certificate key
  ansible.builtin.copy:
    content: "{{ httpd_docker_key }}"
    dest: "{{ httpd_docker_path }}/certs/tls.key"
    owner: "{{ httpd_docker_file_owner }}"
    group: "{{ httpd_docker_file_group }}"
    mode: 0644
  notify: restart httpd

- name: Create httpd config
  ansible.builtin.template:
    src: httpd.conf.j2
    dest: "{{ httpd_docker_path }}/httpd.conf"
    owner: "{{ httpd_docker_file_owner }}"
    group: "{{ httpd_docker_file_group }}"
    mode: 0644
  notify: restart httpd

- name: Create httpd vhosts
  ansible.builtin.template:
    src: httpd-ssl.conf.j2
    dest: "{{ httpd_docker_path }}/httpd-ssl.conf"
    owner: "{{ httpd_docker_file_owner }}"
    group: "{{ httpd_docker_file_group }}"
    mode: 0644
  notify: restart httpd

- name: Create httpd docker deployment
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ httpd_docker_path }}/docker-compose.yml"
    owner: "{{ httpd_docker_file_owner }}"
    group: "{{ httpd_docker_file_group }}"
    trim_blocks: false
    mode: 0644
  notify: restart httpd

- name: Validate docker compose file
  ansible.builtin.command: docker compose config --quiet
  args:
    chdir: "{{ httpd_docker_path }}"
  changed_when: false

- name: Startup container
  ansible.builtin.command: >-
    docker compose --ansi never --progress plain up --detach
  args:
    chdir: "{{ httpd_docker_path }}"
  register: httpd_container_startup
  changed_when: "'Started' in httpd_container_startup.stdout"
